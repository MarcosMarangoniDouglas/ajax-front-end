[{"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\home.js":"1","C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\App.js":"2","C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\header.js":"3","C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\pagination.js":"4","C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\api\\characters.js":"5","C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\edit_delete.js":"6"},{"size":2575,"mtime":1607390177625,"results":"7","hashOfConfig":"8"},{"size":1177,"mtime":1607379233455,"results":"9","hashOfConfig":"8"},{"size":1113,"mtime":1607379222505,"results":"10","hashOfConfig":"8"},{"size":2124,"mtime":1607390274482,"results":"11","hashOfConfig":"8"},{"size":495,"mtime":1607384684114,"results":"12","hashOfConfig":"8"},{"size":3407,"mtime":1607401014842,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"10yem0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\home.js",["27"],"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\App.js",[],"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\header.js",["28"],"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\pagination.js",[],"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\api\\characters.js",["29"],"C:\\Users\\Marangoni\\Documents\\NodeProjects\\start-wars-react\\src\\components\\edit_delete.js",["30","31"],"import React, { Component } from 'react';\r\nimport { Table, Container, Button, ButtonGroup, Modal, Row } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport Characters from '../api/characters';\r\nimport Pagination from './pagination';\r\n\r\nclass Edit_Delete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      characters: [],\r\n      showModal: false,\r\n      redirectToEdit: false,\r\n      character: {},\r\n      total: 0\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.refreshCharacters(0, 10);\r\n  }\r\n\r\n  refreshCharacters = async (page, size) => {\r\n    try {\r\n      let response = await Characters.index(page,size);\r\n      this.setState({ characters: response.data.documents, total: response.data.total });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  onEditCharacter = (character) => {\r\n    console.log(qs.stringify(character));\r\n    this.setState({ redirectToEdit: true, character });\r\n  }\r\n\r\n  onRemoveCharacter = async (character) => {\r\n    try {\r\n      let response = await Characters.remove(character._id);\r\n      await this.refreshCharacters();\r\n      this.setState({ showModal: true })\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  redirectToEdit = () => {\r\n    if (this.state.redirectToEdit) {\r\n      return <Redirect to={`/new?${qs.stringify(this.state.character)}`} />\r\n    }\r\n    return null;\r\n  }\r\n\r\n  renderCharacters = () => {\r\n    return (\r\n      this.state.characters.map((character, index) =>\r\n        (<tr key={`character-${index}`}>\r\n          <th>{character.name}</th>\r\n          <th>{character.height !== 'unknown' ? `${character.height} cm` : `Height not provided`}</th>\r\n          <th>{character.mass !== 'unknown' ? `${character.mass} kg` : `Mass not provided`}</th>\r\n          <th>{character.gender !== 'unknown' ? `${character.gender}` : `Gender not provided`}</th>\r\n          <th>\r\n            <ButtonGroup>\r\n              <Button variant=\"warning\" onClick={() => this.onEditCharacter(character)}>Edit</Button>&nbsp;\r\n              <Button variant=\"danger\" onClick={() => this.onRemoveCharacter(character)}>Delete</Button>\r\n            </ButtonGroup>\r\n          </th>\r\n        </tr>))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { characters } = this.state;\r\n    return (\r\n      <Container>\r\n\r\n        {this.redirectToEdit()}\r\n        <Modal animation={false} show={this.state.showModal}>\r\n          <Modal.Body>\r\n            <p>Character saved succesffuly.</p>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({ showModal: false })}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Row className=\"justify-content-center\"><h2>Sample List of Star Wars Characters</h2></Row>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Height</th>\r\n              <th>Mass</th>\r\n              <th>Gender</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderCharacters()}\r\n          </tbody>\r\n        </Table>\r\n        <Row>\r\n          <Pagination total={this.state.total} onClick={this.refreshCharacters} />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit_Delete;",{"ruleId":"32","severity":1,"message":"33","line":19,"column":6,"nodeType":"34","endLine":19,"endColumn":8,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":20,"column":15,"nodeType":"38","endLine":20,"endColumn":48},{"ruleId":"39","severity":1,"message":"40","line":28,"column":1,"nodeType":"41","endLine":34,"endColumn":3},{"ruleId":"42","severity":1,"message":"43","line":40,"column":11,"nodeType":"44","messageId":"45","endLine":40,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":74,"column":13,"nodeType":"44","messageId":"45","endLine":74,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'characters' is assigned a value but never used.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [fetchData]",{"range":"50","text":"51"},[449,451],"[fetchData]"]